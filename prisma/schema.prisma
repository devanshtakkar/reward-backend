// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model code {
  id         Int       @id @default(autoincrement())
  code       String    @unique
  points     Int
  claimer    User?     @relation(fields: [claimerId], references: [id])
  claimerId  Int?
  claimeTime DateTime?
  claimed    Boolean   @default(false)
  createTime DateTime?

  @@map("codes")
}

model User {
  id               Int                     @id @default(autoincrement())
  firstName        String
  lastName         String?
  occupation       String
  email            String?                 @unique
  codesClaimed     code[]
  passwordHash     String?
  loginProvider    String
  emailVerified    Boolean                 @default(false)
  points           Int                     @default(0)
  rewardsClaimed   RewardsClaimedByUsers[]
  whatsAppNumberId Int?                    @unique
  whatsAppNumber   WhatsAppNumbers?        @relation(fields: [whatsAppNumberId], references: [id])

  @@map("users")
}

model WhatsAppNumbers {
  id          Int     @id @default(autoincrement())
  number      BigInt
  countryCode Int
  user        User?
  verified    Boolean @default(false)

  @@unique(fields: [countryCode, number])
}

model OTP {
  id             Int     @id @default(autoincrement())
  email          String? @unique
  whatsAppNumber BigInt? @unique
  OTP            Int
  expiresAt      BigInt
  retries        Int     @default(0)
}

model PasswordResetLink {
  id        Int    @id @default(autoincrement())
  email     String @unique
  token     String
  expiresAt BigInt

  @@map("passwordResetLinks")
}

model Reward {
  id             Int                     @id @default(autoincrement())
  item           String                  @unique
  pointsRequired Int
  claimable      Boolean
  claimHistory   RewardsClaimedByUsers[]
  image          String

  @@map("Rewards")
}

model RewardsClaimedByUsers {
  id               Int                  @id @default(autoincrement())
  userId           Int
  user             User                 @relation(fields: [userId], references: [id])
  claimTime        DateTime
  rewardId         Int
  reward           Reward               @relation(fields: [rewardId], references: [id], onDelete: Restrict)
  status           RewardDeliveryStatus @default(Pending)
  message          String?
  referenceNo      String?
  pointsSubtracted Int
}

enum RewardDeliveryStatus {
  Confirmed
  Pending
  Transit
  Delivered
}
